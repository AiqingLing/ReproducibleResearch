function Meta_interactive_point_slice_plot(MC_Setup, DB)
    % Meta_interactive_point_slice_plot(MC_Setup, DB)
    %
    % Set up interactive point plotting on slice
    %
    % tor wager, nov 2007
    
    
disp('Setting graphics callback')


conditions = MC_Setup.Xinms;
colors = {'b' 'y'};
maxdistance = DB.radius_mm;

wh = find(MC_Setup.connames{1} == '_'); wh = wh(1);
fieldname = MC_Setup.connames{1}(1:wh-1);

myxyz = [DB.x DB.y DB.z];
V = DB.maskV;

 disp('Setting graphics callback')

        callback_handle = @(str, pos, reg, hReg) point_plot_callback_wrapper(str, pos, reg, hReg);

     hSpmFig = spm_figure('GetWin', 'Graphics');
     
     hReg = uicontrol(hSpmFig, 'Style', 'Text', 'String', 'InteractiveViewer hReg', ...
            'Position', [100 200 100 025], 'Visible', 'Off', ...
            'FontName', 'Times', 'FontSize', 14, 'FontWeight', 'Bold', ...
            'HorizontalAlignment', 'Center');
        hReg = spm_XYZreg('InitReg', hReg, V.mat, V.dim(1:3)');
        spm_XYZreg('Add2Reg', hReg, 0, callback_handle);
        spm_orthviews('Register', hReg);
    

    disp('Ready!')

    
    % inline

    function point_plot_callback_wrapper(str, pos, reg, hReg)

        switch str
            case 'SetCoords'
                plot_callback(pos, DB, conditions, colors, maxdistance)
                
            otherwise
                disp('Unknown callback command from spm_XYZreg');
        end

    end

end


function plot_callback(pos, DB, conditions, colors, maxdistance)

create_figure('Slice view', 1, 2); 

subplot(1, 2, 1);

for i = 1:length(conditions)
    
    [handles, wh_slice, my_z] = plot_points_on_slice(myxyz(strcmp(DB.(fieldname), conditions{i}), :), 'slice', 29, 'color', colors{i}, 'marker', 'o', 'close_enough', maxdistance);

    
end

subplot(1, 2, 2);

for i = 1:length(conditions)
    
    [handles, wh_slice, my_x] = plot_points_on_slice(myxyz(strcmp(DB.(fieldname), conditions{i}), :), 'slice', 23, 'color', colors{i}, 'marker', 'o', 'close_enough', maxdistance, 'sagg');

    
end